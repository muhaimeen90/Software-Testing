// Generated by Selenium IDE
import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;

import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.*;

public class InvalidaddMemberTest {
  private WebDriver driver;
  private WebDriverWait wait;
  private SignInPage signInPage;
  private DashboardPage dashboardPage;
  private ListPage listPage;

  @Before
  public void setUp() {
    WebDriverManager.firefoxdriver().setup();

    // 2. Create FirefoxOptions to specify the path to the actual Firefox binary
    FirefoxOptions options = new FirefoxOptions();
    // This is the crucial line: point to the Firefox executable inside the Snap
    options.setBinary("/snap/firefox/current/usr/lib/firefox/firefox");

    // Optional: Add other Firefox options if needed (e.g., --headless for running without GUI)
    // options.addArguments("--headless");

    // Initialize FirefoxDriver with the specified options
    driver = new FirefoxDriver(options);
    wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    signInPage = new SignInPage(driver, wait);
    dashboardPage = new DashboardPage(driver, wait);
    listPage = new ListPage(driver, wait);
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void testInvalidAddMember() {
    signInPage.open();
    signInPage.clickSignIn();
    listPage.openBoard();
    dashboardPage.clickAddMember();
    dashboardPage.addMemberEmail("user@123.com");
    assertEquals("User does not exist", dashboardPage.getAddMemberError());
  }
}
